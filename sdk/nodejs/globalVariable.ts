// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * The ``mysql.GlobalVariable`` resource manages a global variables on a MySQL
 * server.
 *
 * > **Note on MySQL:** MySQL global variables are [not persistent](https://dev.mysql.com/doc/refman/5.7/en/set-variable.html)
 *
 * > **Note on TiDB:** TiDB global variables are [persistent](https://docs.pingcap.com/tidb/v5.4/sql-statement-set-variable#mysql-compatibility)
 *
 * > **Note about `destroy`:** `destroy` will try assign `DEFAULT` value for global variable.
 *   Unfortunately not every variable support this.
 *
 * ## Example Usage
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as mysql from "@pulumi/mysql";
 *
 * const maxConnections = new mysql.GlobalVariable("maxConnections", {value: "100"});
 * ```
 * <!--End PulumiCodeChooser -->
 *
 * ## Import
 *
 * Global variable can be imported using global variable name.
 *
 * ```sh
 * $ pulumi import mysql:index/globalVariable:GlobalVariable max_connections max_connections
 * ```
 */
export class GlobalVariable extends pulumi.CustomResource {
    /**
     * Get an existing GlobalVariable resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: GlobalVariableState, opts?: pulumi.CustomResourceOptions): GlobalVariable {
        return new GlobalVariable(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'mysql:index/globalVariable:GlobalVariable';

    /**
     * Returns true if the given object is an instance of GlobalVariable.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is GlobalVariable {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === GlobalVariable.__pulumiType;
    }

    /**
     * The name of the global variable.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The value of the global variable.
     */
    public readonly value!: pulumi.Output<string>;

    /**
     * Create a GlobalVariable resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: GlobalVariableArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: GlobalVariableArgs | GlobalVariableState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as GlobalVariableState | undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["value"] = state ? state.value : undefined;
        } else {
            const args = argsOrState as GlobalVariableArgs | undefined;
            if ((!args || args.value === undefined) && !opts.urn) {
                throw new Error("Missing required property 'value'");
            }
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["value"] = args ? args.value : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(GlobalVariable.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering GlobalVariable resources.
 */
export interface GlobalVariableState {
    /**
     * The name of the global variable.
     */
    name?: pulumi.Input<string>;
    /**
     * The value of the global variable.
     */
    value?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a GlobalVariable resource.
 */
export interface GlobalVariableArgs {
    /**
     * The name of the global variable.
     */
    name?: pulumi.Input<string>;
    /**
     * The value of the global variable.
     */
    value: pulumi.Input<string>;
}
