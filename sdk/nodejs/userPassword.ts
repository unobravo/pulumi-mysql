// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class UserPassword extends pulumi.CustomResource {
    /**
     * Get an existing UserPassword resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: UserPasswordState, opts?: pulumi.CustomResourceOptions): UserPassword {
        return new UserPassword(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'mysql:index/userPassword:UserPassword';

    /**
     * Returns true if the given object is an instance of UserPassword.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is UserPassword {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === UserPassword.__pulumiType;
    }

    /**
     * The source host of the user. Defaults to `localhost`.
     */
    public readonly host!: pulumi.Output<string | undefined>;
    public readonly plaintextPassword!: pulumi.Output<string | undefined>;
    public readonly retainOldPassword!: pulumi.Output<boolean | undefined>;
    /**
     * The IAM user to associate with this access key.
     */
    public readonly user!: pulumi.Output<string>;

    /**
     * Create a UserPassword resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: UserPasswordArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: UserPasswordArgs | UserPasswordState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as UserPasswordState | undefined;
            resourceInputs["host"] = state ? state.host : undefined;
            resourceInputs["plaintextPassword"] = state ? state.plaintextPassword : undefined;
            resourceInputs["retainOldPassword"] = state ? state.retainOldPassword : undefined;
            resourceInputs["user"] = state ? state.user : undefined;
        } else {
            const args = argsOrState as UserPasswordArgs | undefined;
            if ((!args || args.user === undefined) && !opts.urn) {
                throw new Error("Missing required property 'user'");
            }
            resourceInputs["host"] = args ? args.host : undefined;
            resourceInputs["plaintextPassword"] = args?.plaintextPassword ? pulumi.secret(args.plaintextPassword) : undefined;
            resourceInputs["retainOldPassword"] = args ? args.retainOldPassword : undefined;
            resourceInputs["user"] = args ? args.user : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["plaintextPassword"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(UserPassword.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering UserPassword resources.
 */
export interface UserPasswordState {
    /**
     * The source host of the user. Defaults to `localhost`.
     */
    host?: pulumi.Input<string>;
    plaintextPassword?: pulumi.Input<string>;
    retainOldPassword?: pulumi.Input<boolean>;
    /**
     * The IAM user to associate with this access key.
     */
    user?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a UserPassword resource.
 */
export interface UserPasswordArgs {
    /**
     * The source host of the user. Defaults to `localhost`.
     */
    host?: pulumi.Input<string>;
    plaintextPassword?: pulumi.Input<string>;
    retainOldPassword?: pulumi.Input<boolean>;
    /**
     * The IAM user to associate with this access key.
     */
    user: pulumi.Input<string>;
}
