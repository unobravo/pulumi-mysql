// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * The ``mysql.RdsConfig`` resource manages two configurations supported by AWS RDS MySQL
 * server.
 *
 * > **Note:** This resource only works with AMAZON RDS MySQL.
 *
 * ## Example Usage
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as mysql from "@unobravo/pulumi-mysql";
 *
 * const _this = new mysql.RdsConfig("this", {
 *     binlogRetentionHours: 48,
 *     replicationTargetDelay: 3200,
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 *
 * ## Import
 *
 * RDS config can be imported with any ID name
 *
 * Example Usage:
 *
 * ```sh
 * $ pulumi import mysql:index/rdsConfig:RdsConfig <tf_name> <any random ID>
 * ```
 */
export class RdsConfig extends pulumi.CustomResource {
    /**
     * Get an existing RdsConfig resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: RdsConfigState, opts?: pulumi.CustomResourceOptions): RdsConfig {
        return new RdsConfig(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'mysql:index/rdsConfig:RdsConfig';

    /**
     * Returns true if the given object is an instance of RdsConfig.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is RdsConfig {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === RdsConfig.__pulumiType;
    }

    /**
     * binlog retention period in hours
     */
    public readonly binlogRetentionHours!: pulumi.Output<number | undefined>;
    /**
     * replicaation target delay in seconds
     *
     * [Amazon RDS MySQL](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/mysql_rds_set_configuration.html)
     */
    public readonly replicationTargetDelay!: pulumi.Output<number | undefined>;

    /**
     * Create a RdsConfig resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: RdsConfigArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: RdsConfigArgs | RdsConfigState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as RdsConfigState | undefined;
            resourceInputs["binlogRetentionHours"] = state ? state.binlogRetentionHours : undefined;
            resourceInputs["replicationTargetDelay"] = state ? state.replicationTargetDelay : undefined;
        } else {
            const args = argsOrState as RdsConfigArgs | undefined;
            resourceInputs["binlogRetentionHours"] = args ? args.binlogRetentionHours : undefined;
            resourceInputs["replicationTargetDelay"] = args ? args.replicationTargetDelay : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(RdsConfig.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering RdsConfig resources.
 */
export interface RdsConfigState {
    /**
     * binlog retention period in hours
     */
    binlogRetentionHours?: pulumi.Input<number>;
    /**
     * replicaation target delay in seconds
     *
     * [Amazon RDS MySQL](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/mysql_rds_set_configuration.html)
     */
    replicationTargetDelay?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a RdsConfig resource.
 */
export interface RdsConfigArgs {
    /**
     * binlog retention period in hours
     */
    binlogRetentionHours?: pulumi.Input<number>;
    /**
     * replicaation target delay in seconds
     *
     * [Amazon RDS MySQL](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/mysql_rds_set_configuration.html)
     */
    replicationTargetDelay?: pulumi.Input<number>;
}
