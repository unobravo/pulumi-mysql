// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package mysql

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/unobravo/pulumi-mysql/sdk/go/mysql/internal"
)

// The “DefaultRoles“ resource creates and manages a user's default roles on a MySQL server.
//
// > **Note:** This resource is available on MySQL version 8.0.0 and later.
//
// ## Example Usage
//
// <!--Start PulumiCodeChooser -->
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/unobravo/pulumi-mysql/sdk/go/mysql"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			readonly, err := mysql.NewRole(ctx, "readonly", nil)
//			if err != nil {
//				return err
//			}
//			jdoeUser, err := mysql.NewUser(ctx, "jdoeUser", &mysql.UserArgs{
//				User: pulumi.String("jdoe"),
//				Host: pulumi.String("%"),
//			})
//			if err != nil {
//				return err
//			}
//			jdoeGrant, err := mysql.NewGrant(ctx, "jdoeGrant", &mysql.GrantArgs{
//				User:     jdoeUser.User,
//				Host:     jdoeUser.Host,
//				Database: pulumi.String(""),
//				Roles: pulumi.StringArray{
//					readonly.Name,
//				},
//			})
//			if err != nil {
//				return err
//			}
//			_, err = mysql.NewDefaultRoles(ctx, "jdoeDefaultRoles", &mysql.DefaultRolesArgs{
//				User:  jdoeUser.User,
//				Host:  jdoeUser.Host,
//				Roles: jdoeGrant.Roles,
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// <!--End PulumiCodeChooser -->
//
// ## Import
//
// User default roles can be imported using user and host.
//
// ```sh
// $ pulumi import mysql:index/defaultRoles:DefaultRoles example user@host
// ```
type DefaultRoles struct {
	pulumi.CustomResourceState

	// The source host of the user. Defaults to "localhost".
	Host pulumi.StringPtrOutput `pulumi:"host"`
	// A list of default roles to assign to the user. By default no roles are assigned.
	//
	// > **Note:** Creating a new default roles resource on an existing user will **overwrite** the user's existing default roles. Likewise, destryoing a default roles resource will **remove** the user's default roles, equivalent to running `ALTER USER ... DEFAULT ROLE NONE`.
	Roles pulumi.StringArrayOutput `pulumi:"roles"`
	// The name of the user.
	User pulumi.StringOutput `pulumi:"user"`
}

// NewDefaultRoles registers a new resource with the given unique name, arguments, and options.
func NewDefaultRoles(ctx *pulumi.Context,
	name string, args *DefaultRolesArgs, opts ...pulumi.ResourceOption) (*DefaultRoles, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Roles == nil {
		return nil, errors.New("invalid value for required argument 'Roles'")
	}
	if args.User == nil {
		return nil, errors.New("invalid value for required argument 'User'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource DefaultRoles
	err := ctx.RegisterResource("mysql:index/defaultRoles:DefaultRoles", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDefaultRoles gets an existing DefaultRoles resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDefaultRoles(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DefaultRolesState, opts ...pulumi.ResourceOption) (*DefaultRoles, error) {
	var resource DefaultRoles
	err := ctx.ReadResource("mysql:index/defaultRoles:DefaultRoles", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DefaultRoles resources.
type defaultRolesState struct {
	// The source host of the user. Defaults to "localhost".
	Host *string `pulumi:"host"`
	// A list of default roles to assign to the user. By default no roles are assigned.
	//
	// > **Note:** Creating a new default roles resource on an existing user will **overwrite** the user's existing default roles. Likewise, destryoing a default roles resource will **remove** the user's default roles, equivalent to running `ALTER USER ... DEFAULT ROLE NONE`.
	Roles []string `pulumi:"roles"`
	// The name of the user.
	User *string `pulumi:"user"`
}

type DefaultRolesState struct {
	// The source host of the user. Defaults to "localhost".
	Host pulumi.StringPtrInput
	// A list of default roles to assign to the user. By default no roles are assigned.
	//
	// > **Note:** Creating a new default roles resource on an existing user will **overwrite** the user's existing default roles. Likewise, destryoing a default roles resource will **remove** the user's default roles, equivalent to running `ALTER USER ... DEFAULT ROLE NONE`.
	Roles pulumi.StringArrayInput
	// The name of the user.
	User pulumi.StringPtrInput
}

func (DefaultRolesState) ElementType() reflect.Type {
	return reflect.TypeOf((*defaultRolesState)(nil)).Elem()
}

type defaultRolesArgs struct {
	// The source host of the user. Defaults to "localhost".
	Host *string `pulumi:"host"`
	// A list of default roles to assign to the user. By default no roles are assigned.
	//
	// > **Note:** Creating a new default roles resource on an existing user will **overwrite** the user's existing default roles. Likewise, destryoing a default roles resource will **remove** the user's default roles, equivalent to running `ALTER USER ... DEFAULT ROLE NONE`.
	Roles []string `pulumi:"roles"`
	// The name of the user.
	User string `pulumi:"user"`
}

// The set of arguments for constructing a DefaultRoles resource.
type DefaultRolesArgs struct {
	// The source host of the user. Defaults to "localhost".
	Host pulumi.StringPtrInput
	// A list of default roles to assign to the user. By default no roles are assigned.
	//
	// > **Note:** Creating a new default roles resource on an existing user will **overwrite** the user's existing default roles. Likewise, destryoing a default roles resource will **remove** the user's default roles, equivalent to running `ALTER USER ... DEFAULT ROLE NONE`.
	Roles pulumi.StringArrayInput
	// The name of the user.
	User pulumi.StringInput
}

func (DefaultRolesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*defaultRolesArgs)(nil)).Elem()
}

type DefaultRolesInput interface {
	pulumi.Input

	ToDefaultRolesOutput() DefaultRolesOutput
	ToDefaultRolesOutputWithContext(ctx context.Context) DefaultRolesOutput
}

func (*DefaultRoles) ElementType() reflect.Type {
	return reflect.TypeOf((**DefaultRoles)(nil)).Elem()
}

func (i *DefaultRoles) ToDefaultRolesOutput() DefaultRolesOutput {
	return i.ToDefaultRolesOutputWithContext(context.Background())
}

func (i *DefaultRoles) ToDefaultRolesOutputWithContext(ctx context.Context) DefaultRolesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DefaultRolesOutput)
}

// DefaultRolesArrayInput is an input type that accepts DefaultRolesArray and DefaultRolesArrayOutput values.
// You can construct a concrete instance of `DefaultRolesArrayInput` via:
//
//	DefaultRolesArray{ DefaultRolesArgs{...} }
type DefaultRolesArrayInput interface {
	pulumi.Input

	ToDefaultRolesArrayOutput() DefaultRolesArrayOutput
	ToDefaultRolesArrayOutputWithContext(context.Context) DefaultRolesArrayOutput
}

type DefaultRolesArray []DefaultRolesInput

func (DefaultRolesArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DefaultRoles)(nil)).Elem()
}

func (i DefaultRolesArray) ToDefaultRolesArrayOutput() DefaultRolesArrayOutput {
	return i.ToDefaultRolesArrayOutputWithContext(context.Background())
}

func (i DefaultRolesArray) ToDefaultRolesArrayOutputWithContext(ctx context.Context) DefaultRolesArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DefaultRolesArrayOutput)
}

// DefaultRolesMapInput is an input type that accepts DefaultRolesMap and DefaultRolesMapOutput values.
// You can construct a concrete instance of `DefaultRolesMapInput` via:
//
//	DefaultRolesMap{ "key": DefaultRolesArgs{...} }
type DefaultRolesMapInput interface {
	pulumi.Input

	ToDefaultRolesMapOutput() DefaultRolesMapOutput
	ToDefaultRolesMapOutputWithContext(context.Context) DefaultRolesMapOutput
}

type DefaultRolesMap map[string]DefaultRolesInput

func (DefaultRolesMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DefaultRoles)(nil)).Elem()
}

func (i DefaultRolesMap) ToDefaultRolesMapOutput() DefaultRolesMapOutput {
	return i.ToDefaultRolesMapOutputWithContext(context.Background())
}

func (i DefaultRolesMap) ToDefaultRolesMapOutputWithContext(ctx context.Context) DefaultRolesMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DefaultRolesMapOutput)
}

type DefaultRolesOutput struct{ *pulumi.OutputState }

func (DefaultRolesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DefaultRoles)(nil)).Elem()
}

func (o DefaultRolesOutput) ToDefaultRolesOutput() DefaultRolesOutput {
	return o
}

func (o DefaultRolesOutput) ToDefaultRolesOutputWithContext(ctx context.Context) DefaultRolesOutput {
	return o
}

// The source host of the user. Defaults to "localhost".
func (o DefaultRolesOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DefaultRoles) pulumi.StringPtrOutput { return v.Host }).(pulumi.StringPtrOutput)
}

// A list of default roles to assign to the user. By default no roles are assigned.
//
// > **Note:** Creating a new default roles resource on an existing user will **overwrite** the user's existing default roles. Likewise, destryoing a default roles resource will **remove** the user's default roles, equivalent to running `ALTER USER ... DEFAULT ROLE NONE`.
func (o DefaultRolesOutput) Roles() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DefaultRoles) pulumi.StringArrayOutput { return v.Roles }).(pulumi.StringArrayOutput)
}

// The name of the user.
func (o DefaultRolesOutput) User() pulumi.StringOutput {
	return o.ApplyT(func(v *DefaultRoles) pulumi.StringOutput { return v.User }).(pulumi.StringOutput)
}

type DefaultRolesArrayOutput struct{ *pulumi.OutputState }

func (DefaultRolesArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DefaultRoles)(nil)).Elem()
}

func (o DefaultRolesArrayOutput) ToDefaultRolesArrayOutput() DefaultRolesArrayOutput {
	return o
}

func (o DefaultRolesArrayOutput) ToDefaultRolesArrayOutputWithContext(ctx context.Context) DefaultRolesArrayOutput {
	return o
}

func (o DefaultRolesArrayOutput) Index(i pulumi.IntInput) DefaultRolesOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *DefaultRoles {
		return vs[0].([]*DefaultRoles)[vs[1].(int)]
	}).(DefaultRolesOutput)
}

type DefaultRolesMapOutput struct{ *pulumi.OutputState }

func (DefaultRolesMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DefaultRoles)(nil)).Elem()
}

func (o DefaultRolesMapOutput) ToDefaultRolesMapOutput() DefaultRolesMapOutput {
	return o
}

func (o DefaultRolesMapOutput) ToDefaultRolesMapOutputWithContext(ctx context.Context) DefaultRolesMapOutput {
	return o
}

func (o DefaultRolesMapOutput) MapIndex(k pulumi.StringInput) DefaultRolesOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *DefaultRoles {
		return vs[0].(map[string]*DefaultRoles)[vs[1].(string)]
	}).(DefaultRolesOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DefaultRolesInput)(nil)).Elem(), &DefaultRoles{})
	pulumi.RegisterInputType(reflect.TypeOf((*DefaultRolesArrayInput)(nil)).Elem(), DefaultRolesArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DefaultRolesMapInput)(nil)).Elem(), DefaultRolesMap{})
	pulumi.RegisterOutputType(DefaultRolesOutput{})
	pulumi.RegisterOutputType(DefaultRolesArrayOutput{})
	pulumi.RegisterOutputType(DefaultRolesMapOutput{})
}
