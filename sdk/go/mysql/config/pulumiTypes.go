// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package config

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/unobravo/pulumi-mysql/sdk/go/mysql/internal"
)

var _ = internal.GetEnvOrDefault

type AwsConfigs struct {
	AccessKey *string `pulumi:"accessKey"`
	Profile   *string `pulumi:"profile"`
	Region    *string `pulumi:"region"`
	SecretKey *string `pulumi:"secretKey"`
}

// AwsConfigsInput is an input type that accepts AwsConfigsArgs and AwsConfigsOutput values.
// You can construct a concrete instance of `AwsConfigsInput` via:
//
//	AwsConfigsArgs{...}
type AwsConfigsInput interface {
	pulumi.Input

	ToAwsConfigsOutput() AwsConfigsOutput
	ToAwsConfigsOutputWithContext(context.Context) AwsConfigsOutput
}

type AwsConfigsArgs struct {
	AccessKey pulumi.StringPtrInput `pulumi:"accessKey"`
	Profile   pulumi.StringPtrInput `pulumi:"profile"`
	Region    pulumi.StringPtrInput `pulumi:"region"`
	SecretKey pulumi.StringPtrInput `pulumi:"secretKey"`
}

func (AwsConfigsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AwsConfigs)(nil)).Elem()
}

func (i AwsConfigsArgs) ToAwsConfigsOutput() AwsConfigsOutput {
	return i.ToAwsConfigsOutputWithContext(context.Background())
}

func (i AwsConfigsArgs) ToAwsConfigsOutputWithContext(ctx context.Context) AwsConfigsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsConfigsOutput)
}

// AwsConfigsArrayInput is an input type that accepts AwsConfigsArray and AwsConfigsArrayOutput values.
// You can construct a concrete instance of `AwsConfigsArrayInput` via:
//
//	AwsConfigsArray{ AwsConfigsArgs{...} }
type AwsConfigsArrayInput interface {
	pulumi.Input

	ToAwsConfigsArrayOutput() AwsConfigsArrayOutput
	ToAwsConfigsArrayOutputWithContext(context.Context) AwsConfigsArrayOutput
}

type AwsConfigsArray []AwsConfigsInput

func (AwsConfigsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AwsConfigs)(nil)).Elem()
}

func (i AwsConfigsArray) ToAwsConfigsArrayOutput() AwsConfigsArrayOutput {
	return i.ToAwsConfigsArrayOutputWithContext(context.Background())
}

func (i AwsConfigsArray) ToAwsConfigsArrayOutputWithContext(ctx context.Context) AwsConfigsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsConfigsArrayOutput)
}

type AwsConfigsOutput struct{ *pulumi.OutputState }

func (AwsConfigsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AwsConfigs)(nil)).Elem()
}

func (o AwsConfigsOutput) ToAwsConfigsOutput() AwsConfigsOutput {
	return o
}

func (o AwsConfigsOutput) ToAwsConfigsOutputWithContext(ctx context.Context) AwsConfigsOutput {
	return o
}

func (o AwsConfigsOutput) AccessKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AwsConfigs) *string { return v.AccessKey }).(pulumi.StringPtrOutput)
}

func (o AwsConfigsOutput) Profile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AwsConfigs) *string { return v.Profile }).(pulumi.StringPtrOutput)
}

func (o AwsConfigsOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AwsConfigs) *string { return v.Region }).(pulumi.StringPtrOutput)
}

func (o AwsConfigsOutput) SecretKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AwsConfigs) *string { return v.SecretKey }).(pulumi.StringPtrOutput)
}

type AwsConfigsArrayOutput struct{ *pulumi.OutputState }

func (AwsConfigsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AwsConfigs)(nil)).Elem()
}

func (o AwsConfigsArrayOutput) ToAwsConfigsArrayOutput() AwsConfigsArrayOutput {
	return o
}

func (o AwsConfigsArrayOutput) ToAwsConfigsArrayOutputWithContext(ctx context.Context) AwsConfigsArrayOutput {
	return o
}

func (o AwsConfigsArrayOutput) Index(i pulumi.IntInput) AwsConfigsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AwsConfigs {
		return vs[0].([]AwsConfigs)[vs[1].(int)]
	}).(AwsConfigsOutput)
}

type AzureConfigs struct {
	ClientId     *string `pulumi:"clientId"`
	ClientSecret *string `pulumi:"clientSecret"`
	Environment  *string `pulumi:"environment"`
	TenantId     *string `pulumi:"tenantId"`
}

// AzureConfigsInput is an input type that accepts AzureConfigsArgs and AzureConfigsOutput values.
// You can construct a concrete instance of `AzureConfigsInput` via:
//
//	AzureConfigsArgs{...}
type AzureConfigsInput interface {
	pulumi.Input

	ToAzureConfigsOutput() AzureConfigsOutput
	ToAzureConfigsOutputWithContext(context.Context) AzureConfigsOutput
}

type AzureConfigsArgs struct {
	ClientId     pulumi.StringPtrInput `pulumi:"clientId"`
	ClientSecret pulumi.StringPtrInput `pulumi:"clientSecret"`
	Environment  pulumi.StringPtrInput `pulumi:"environment"`
	TenantId     pulumi.StringPtrInput `pulumi:"tenantId"`
}

func (AzureConfigsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureConfigs)(nil)).Elem()
}

func (i AzureConfigsArgs) ToAzureConfigsOutput() AzureConfigsOutput {
	return i.ToAzureConfigsOutputWithContext(context.Background())
}

func (i AzureConfigsArgs) ToAzureConfigsOutputWithContext(ctx context.Context) AzureConfigsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureConfigsOutput)
}

// AzureConfigsArrayInput is an input type that accepts AzureConfigsArray and AzureConfigsArrayOutput values.
// You can construct a concrete instance of `AzureConfigsArrayInput` via:
//
//	AzureConfigsArray{ AzureConfigsArgs{...} }
type AzureConfigsArrayInput interface {
	pulumi.Input

	ToAzureConfigsArrayOutput() AzureConfigsArrayOutput
	ToAzureConfigsArrayOutputWithContext(context.Context) AzureConfigsArrayOutput
}

type AzureConfigsArray []AzureConfigsInput

func (AzureConfigsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AzureConfigs)(nil)).Elem()
}

func (i AzureConfigsArray) ToAzureConfigsArrayOutput() AzureConfigsArrayOutput {
	return i.ToAzureConfigsArrayOutputWithContext(context.Background())
}

func (i AzureConfigsArray) ToAzureConfigsArrayOutputWithContext(ctx context.Context) AzureConfigsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureConfigsArrayOutput)
}

type AzureConfigsOutput struct{ *pulumi.OutputState }

func (AzureConfigsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureConfigs)(nil)).Elem()
}

func (o AzureConfigsOutput) ToAzureConfigsOutput() AzureConfigsOutput {
	return o
}

func (o AzureConfigsOutput) ToAzureConfigsOutputWithContext(ctx context.Context) AzureConfigsOutput {
	return o
}

func (o AzureConfigsOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureConfigs) *string { return v.ClientId }).(pulumi.StringPtrOutput)
}

func (o AzureConfigsOutput) ClientSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureConfigs) *string { return v.ClientSecret }).(pulumi.StringPtrOutput)
}

func (o AzureConfigsOutput) Environment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureConfigs) *string { return v.Environment }).(pulumi.StringPtrOutput)
}

func (o AzureConfigsOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureConfigs) *string { return v.TenantId }).(pulumi.StringPtrOutput)
}

type AzureConfigsArrayOutput struct{ *pulumi.OutputState }

func (AzureConfigsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AzureConfigs)(nil)).Elem()
}

func (o AzureConfigsArrayOutput) ToAzureConfigsArrayOutput() AzureConfigsArrayOutput {
	return o
}

func (o AzureConfigsArrayOutput) ToAzureConfigsArrayOutputWithContext(ctx context.Context) AzureConfigsArrayOutput {
	return o
}

func (o AzureConfigsArrayOutput) Index(i pulumi.IntInput) AzureConfigsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AzureConfigs {
		return vs[0].([]AzureConfigs)[vs[1].(int)]
	}).(AzureConfigsOutput)
}

type CustomTls struct {
	CaCert     string  `pulumi:"caCert"`
	ClientCert string  `pulumi:"clientCert"`
	ClientKey  string  `pulumi:"clientKey"`
	ConfigKey  *string `pulumi:"configKey"`
}

// CustomTlsInput is an input type that accepts CustomTlsArgs and CustomTlsOutput values.
// You can construct a concrete instance of `CustomTlsInput` via:
//
//	CustomTlsArgs{...}
type CustomTlsInput interface {
	pulumi.Input

	ToCustomTlsOutput() CustomTlsOutput
	ToCustomTlsOutputWithContext(context.Context) CustomTlsOutput
}

type CustomTlsArgs struct {
	CaCert     pulumi.StringInput    `pulumi:"caCert"`
	ClientCert pulumi.StringInput    `pulumi:"clientCert"`
	ClientKey  pulumi.StringInput    `pulumi:"clientKey"`
	ConfigKey  pulumi.StringPtrInput `pulumi:"configKey"`
}

func (CustomTlsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomTls)(nil)).Elem()
}

func (i CustomTlsArgs) ToCustomTlsOutput() CustomTlsOutput {
	return i.ToCustomTlsOutputWithContext(context.Background())
}

func (i CustomTlsArgs) ToCustomTlsOutputWithContext(ctx context.Context) CustomTlsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomTlsOutput)
}

// CustomTlsArrayInput is an input type that accepts CustomTlsArray and CustomTlsArrayOutput values.
// You can construct a concrete instance of `CustomTlsArrayInput` via:
//
//	CustomTlsArray{ CustomTlsArgs{...} }
type CustomTlsArrayInput interface {
	pulumi.Input

	ToCustomTlsArrayOutput() CustomTlsArrayOutput
	ToCustomTlsArrayOutputWithContext(context.Context) CustomTlsArrayOutput
}

type CustomTlsArray []CustomTlsInput

func (CustomTlsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CustomTls)(nil)).Elem()
}

func (i CustomTlsArray) ToCustomTlsArrayOutput() CustomTlsArrayOutput {
	return i.ToCustomTlsArrayOutputWithContext(context.Background())
}

func (i CustomTlsArray) ToCustomTlsArrayOutputWithContext(ctx context.Context) CustomTlsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomTlsArrayOutput)
}

type CustomTlsOutput struct{ *pulumi.OutputState }

func (CustomTlsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomTls)(nil)).Elem()
}

func (o CustomTlsOutput) ToCustomTlsOutput() CustomTlsOutput {
	return o
}

func (o CustomTlsOutput) ToCustomTlsOutputWithContext(ctx context.Context) CustomTlsOutput {
	return o
}

func (o CustomTlsOutput) CaCert() pulumi.StringOutput {
	return o.ApplyT(func(v CustomTls) string { return v.CaCert }).(pulumi.StringOutput)
}

func (o CustomTlsOutput) ClientCert() pulumi.StringOutput {
	return o.ApplyT(func(v CustomTls) string { return v.ClientCert }).(pulumi.StringOutput)
}

func (o CustomTlsOutput) ClientKey() pulumi.StringOutput {
	return o.ApplyT(func(v CustomTls) string { return v.ClientKey }).(pulumi.StringOutput)
}

func (o CustomTlsOutput) ConfigKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomTls) *string { return v.ConfigKey }).(pulumi.StringPtrOutput)
}

type CustomTlsArrayOutput struct{ *pulumi.OutputState }

func (CustomTlsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CustomTls)(nil)).Elem()
}

func (o CustomTlsArrayOutput) ToCustomTlsArrayOutput() CustomTlsArrayOutput {
	return o
}

func (o CustomTlsArrayOutput) ToCustomTlsArrayOutputWithContext(ctx context.Context) CustomTlsArrayOutput {
	return o
}

func (o CustomTlsArrayOutput) Index(i pulumi.IntInput) CustomTlsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CustomTls {
		return vs[0].([]CustomTls)[vs[1].(int)]
	}).(CustomTlsOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AwsConfigsInput)(nil)).Elem(), AwsConfigsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AwsConfigsArrayInput)(nil)).Elem(), AwsConfigsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AzureConfigsInput)(nil)).Elem(), AzureConfigsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AzureConfigsArrayInput)(nil)).Elem(), AzureConfigsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CustomTlsInput)(nil)).Elem(), CustomTlsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CustomTlsArrayInput)(nil)).Elem(), CustomTlsArray{})
	pulumi.RegisterOutputType(AwsConfigsOutput{})
	pulumi.RegisterOutputType(AwsConfigsArrayOutput{})
	pulumi.RegisterOutputType(AzureConfigsOutput{})
	pulumi.RegisterOutputType(AzureConfigsArrayOutput{})
	pulumi.RegisterOutputType(CustomTlsOutput{})
	pulumi.RegisterOutputType(CustomTlsArrayOutput{})
}
