// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Mysql
{
    /// <summary>
    /// The ``mysql.GlobalVariable`` resource manages a global variables on a MySQL
    /// server.
    /// 
    /// &gt; **Note on MySQL:** MySQL global variables are [not persistent](https://dev.mysql.com/doc/refman/5.7/en/set-variable.html)
    /// 
    /// &gt; **Note on TiDB:** TiDB global variables are [persistent](https://docs.pingcap.com/tidb/v5.4/sql-statement-set-variable#mysql-compatibility)
    /// 
    /// &gt; **Note about `destroy`:** `destroy` will try assign `DEFAULT` value for global variable.
    ///   Unfortunately not every variable support this.
    /// 
    /// ## Example Usage
    /// 
    /// &lt;!--Start PulumiCodeChooser --&gt;
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Mysql = Pulumi.Mysql;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var maxConnections = new Mysql.GlobalVariable("maxConnections", new()
    ///     {
    ///         Value = "100",
    ///     });
    /// 
    /// });
    /// ```
    /// &lt;!--End PulumiCodeChooser --&gt;
    /// 
    /// ## Import
    /// 
    /// Global variable can be imported using global variable name.
    /// 
    /// ```sh
    /// $ pulumi import mysql:index/globalVariable:GlobalVariable max_connections max_connections
    /// ```
    /// </summary>
    [MysqlResourceType("mysql:index/globalVariable:GlobalVariable")]
    public partial class GlobalVariable : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The name of the global variable.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The value of the global variable.
        /// </summary>
        [Output("value")]
        public Output<string> Value { get; private set; } = null!;


        /// <summary>
        /// Create a GlobalVariable resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public GlobalVariable(string name, GlobalVariableArgs args, CustomResourceOptions? options = null)
            : base("mysql:index/globalVariable:GlobalVariable", name, args ?? new GlobalVariableArgs(), MakeResourceOptions(options, ""))
        {
        }

        private GlobalVariable(string name, Input<string> id, GlobalVariableState? state = null, CustomResourceOptions? options = null)
            : base("mysql:index/globalVariable:GlobalVariable", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing GlobalVariable resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static GlobalVariable Get(string name, Input<string> id, GlobalVariableState? state = null, CustomResourceOptions? options = null)
        {
            return new GlobalVariable(name, id, state, options);
        }
    }

    public sealed class GlobalVariableArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The name of the global variable.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The value of the global variable.
        /// </summary>
        [Input("value", required: true)]
        public Input<string> Value { get; set; } = null!;

        public GlobalVariableArgs()
        {
        }
        public static new GlobalVariableArgs Empty => new GlobalVariableArgs();
    }

    public sealed class GlobalVariableState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The name of the global variable.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The value of the global variable.
        /// </summary>
        [Input("value")]
        public Input<string>? Value { get; set; }

        public GlobalVariableState()
        {
        }
        public static new GlobalVariableState Empty => new GlobalVariableState();
    }
}
