// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Mysql
{
    /// <summary>
    /// The ``mysql.RdsConfig`` resource manages two configurations supported by AWS RDS MySQL
    /// server.
    /// 
    /// &gt; **Note:** This resource only works with AMAZON RDS MySQL.
    /// 
    /// ## Example Usage
    /// 
    /// &lt;!--Start PulumiCodeChooser --&gt;
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Mysql = Pulumi.Mysql;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var @this = new Mysql.RdsConfig("this", new()
    ///     {
    ///         BinlogRetentionHours = 48,
    ///         ReplicationTargetDelay = 3200,
    ///     });
    /// 
    /// });
    /// ```
    /// &lt;!--End PulumiCodeChooser --&gt;
    /// 
    /// ## Import
    /// 
    /// RDS config can be imported with any ID name
    /// 
    /// Example Usage:
    /// 
    /// ```sh
    /// $ pulumi import mysql:index/rdsConfig:RdsConfig &lt;tf_name&gt; &lt;any random ID&gt;
    /// ```
    /// </summary>
    [MysqlResourceType("mysql:index/rdsConfig:RdsConfig")]
    public partial class RdsConfig : global::Pulumi.CustomResource
    {
        /// <summary>
        /// binlog retention period in hours
        /// </summary>
        [Output("binlogRetentionHours")]
        public Output<int?> BinlogRetentionHours { get; private set; } = null!;

        /// <summary>
        /// replicaation target delay in seconds
        /// 
        /// [Amazon RDS MySQL](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/mysql_rds_set_configuration.html)
        /// </summary>
        [Output("replicationTargetDelay")]
        public Output<int?> ReplicationTargetDelay { get; private set; } = null!;


        /// <summary>
        /// Create a RdsConfig resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public RdsConfig(string name, RdsConfigArgs? args = null, CustomResourceOptions? options = null)
            : base("mysql:index/rdsConfig:RdsConfig", name, args ?? new RdsConfigArgs(), MakeResourceOptions(options, ""))
        {
        }

        private RdsConfig(string name, Input<string> id, RdsConfigState? state = null, CustomResourceOptions? options = null)
            : base("mysql:index/rdsConfig:RdsConfig", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/unobravo/pulumi-mysql",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing RdsConfig resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static RdsConfig Get(string name, Input<string> id, RdsConfigState? state = null, CustomResourceOptions? options = null)
        {
            return new RdsConfig(name, id, state, options);
        }
    }

    public sealed class RdsConfigArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// binlog retention period in hours
        /// </summary>
        [Input("binlogRetentionHours")]
        public Input<int>? BinlogRetentionHours { get; set; }

        /// <summary>
        /// replicaation target delay in seconds
        /// 
        /// [Amazon RDS MySQL](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/mysql_rds_set_configuration.html)
        /// </summary>
        [Input("replicationTargetDelay")]
        public Input<int>? ReplicationTargetDelay { get; set; }

        public RdsConfigArgs()
        {
        }
        public static new RdsConfigArgs Empty => new RdsConfigArgs();
    }

    public sealed class RdsConfigState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// binlog retention period in hours
        /// </summary>
        [Input("binlogRetentionHours")]
        public Input<int>? BinlogRetentionHours { get; set; }

        /// <summary>
        /// replicaation target delay in seconds
        /// 
        /// [Amazon RDS MySQL](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/mysql_rds_set_configuration.html)
        /// </summary>
        [Input("replicationTargetDelay")]
        public Input<int>? ReplicationTargetDelay { get; set; }

        public RdsConfigState()
        {
        }
        public static new RdsConfigState Empty => new RdsConfigState();
    }
}
