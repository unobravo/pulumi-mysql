# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities
from . import outputs

import types

__config__ = pulumi.Config('mysql')


class _ExportableConfig(types.ModuleType):
    @property
    def authentication_plugin(self) -> Optional[str]:
        return __config__.get('authenticationPlugin')

    @property
    def aws_configs(self) -> Optional[str]:
        return __config__.get('awsConfigs')

    @property
    def azure_configs(self) -> Optional[str]:
        return __config__.get('azureConfigs')

    @property
    def conn_params(self) -> Optional[str]:
        return __config__.get('connParams')

    @property
    def connect_retry_timeout_sec(self) -> Optional[int]:
        return __config__.get_int('connectRetryTimeoutSec')

    @property
    def custom_tls(self) -> Optional[str]:
        return __config__.get('customTls')

    @property
    def endpoint(self) -> Optional[str]:
        return __config__.get('endpoint')

    @property
    def iam_database_authentication(self) -> Optional[bool]:
        return __config__.get_bool('iamDatabaseAuthentication')

    @property
    def max_conn_lifetime_sec(self) -> Optional[int]:
        return __config__.get_int('maxConnLifetimeSec')

    @property
    def max_open_conns(self) -> Optional[int]:
        return __config__.get_int('maxOpenConns')

    @property
    def password(self) -> Optional[str]:
        return __config__.get('password')

    @property
    def private_ip(self) -> Optional[bool]:
        return __config__.get_bool('privateIp')

    @property
    def proxy(self) -> Optional[str]:
        return __config__.get('proxy')

    @property
    def tls(self) -> Optional[str]:
        return __config__.get('tls')

    @property
    def username(self) -> Optional[str]:
        return __config__.get('username')

